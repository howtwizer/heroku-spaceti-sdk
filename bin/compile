#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

# fail fast
set -e

# debug
# set -x

# parse and derive params
BUILD_DIR=$1
CACHE_DIR=$2
LP_DIR=`cd $(dirname $0); cd ..; pwd`

function error() {
  echo " !     $*" >&2
  exit 1
}

function topic() {
  echo "-----> $*"
}

function indent() {
  c='s/^/       /'
  case $(uname) in
    Darwin) sed -l "$c";;
    *)      sed -u "$c";;
  esac
}

SDK_GEM_DIR = "$BUILD_DIR/vendor/gems"
SDK_CACHE_DIR = "$CACHE_DIR/spaceti_sdk/cache"

# Getting latest GEM version

function get_latest_gem_dir() {
    cd $1
    gemdirs=( spaceti-SDK-*/ )
    IFS=$'\n' sorted=($(sort <<<"${gemdirs[*]}"))
    unset IFS
    echo "${sorted[${#sorted[@]}-1]%?}"
}

GEM_NAME=$(get_latest_gem_dir $SDK_GEM_DIR)
SDK_BUILD_DIR = "$BUILD_DIR/vendor/gems/$GEM_NAME/ext/spaceti-sdk"
SDK_GEM_SOURCE_DIR = "$BUILD_DIR/vendor/pack"

if [ -f $SDK_CACHE_DIR/sdk.so ] && cmp -s $SDK_GEM_SOURCE_DIR/$GEM_NAME.gem $SDK_CACHE_DIR/$GEM_NAME.gem ; then
    # Old Aptfile is the same as new
    topic "Reusing cache"
    cp $SDK_CACHE_DIR/sdk.so $BUILD_DIR/vendor/gems/$GEM_NAME/lib/spaceti
else
    topic "Detected SDK changes, flushing cache"
    cd $SDK_BUILD_DIR

    rm -rf $SDK_CACHE_DIR
    mkdir -p  $SDK_CACHE_DIR

    cp $SDK_GEM_SOURCE_DIR/$GEM_NAME.gem $SDK_CACHE_DIR

    rm -rf sdk_build && mkdir sdk_build && cd sdk_build
    cmake -DCMAKE_C_FLAGS=-fPIC -DCMAKE_CXX_FLAGS=-fPIC ../sdk
    make -j8 spaceti_core_sdk
    cd ..
    ruby extconf.rb
    make clean
    make
    rm -rf sdk_build
    cp sdk.so $BUILD_DIR/vendor/gems/$GEM_NAME/lib/spaceti
fi